package com.dresscode.mapper;

import com.dresscode.dto.event.EventRequestDto;
import com.dresscode.dto.event.EventResponseDto;
import com.dresscode.model.Event;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;
import org.mapstruct.factory.Mappers;

@Mapper(componentModel = "spring")
public interface EventMapper {

    EventMapper INSTANCE = Mappers.getMapper(EventMapper.class);

    // From DTO to Entity
    @Mapping(target = "id", ignore = true) // id is generated by the DB
    @Mapping(target = "createdAt", ignore = true)
    @Mapping(target = "updatedAt", ignore = true)
    Event toEntity(EventRequestDto dto);

    // From Entity to Response DTO
    EventResponseDto toDto(Event event);

    // For partial update if needed
    void updateEventFromDto(EventRequestDto dto, @MappingTarget Event event);
}
